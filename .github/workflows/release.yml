name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'master'
      - 'main'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Run tests
        run: go test ./...

      - name: Debug Token Info
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Token info for debugging:"
          echo "Token prefix: ${GITHUB_TOKEN:0:4}..."
          echo "Token length: ${#GITHUB_TOKEN} characters"
          echo "Token type: $(if [[ $GITHUB_TOKEN == ghp_* ]]; then echo "Classic PAT"; elif [[ $GITHUB_TOKEN == github_pat_* ]]; then echo "Fine-grained PAT"; else echo "GITHUB_TOKEN or unknown"; fi)"
          
          echo "Attempting to test token validity..."
          USER_INFO=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/user)
          HTTP_CODE=$?
          echo "GitHub API authentication result: $(echo "$USER_INFO" | grep -q "login" && echo "Valid (authenticated)" || echo "Invalid (not authenticated)")"
          echo "Token owner: $(echo "$USER_INFO" | grep -o '"login": *"[^"]*"' | cut -d'"' -f4)"
          
          echo "Testing permission scopes..."
          SCOPES=$(curl -s -I -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/nsnarender5511/homebrew-tap | grep -i x-oauth-scopes | cut -d':' -f2-)
          echo "Token scopes: $SCOPES"
          
          echo "Testing homebrew-tap repo access..."
          REPO_ACCESS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/nsnarender5511/homebrew-tap)
          echo "Homebrew repo access: $(echo "$REPO_ACCESS" | grep -q "permissions" && echo "Has access" || echo "No access")"
          echo "Write permission: $(echo "$REPO_ACCESS" | grep -q '"push": *true' && echo "Yes" || echo "No")"
          
          echo "Testing scoop-bucket repo access..."
          SCOOP_ACCESS=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/nsnarender5511/scoop-bucket)
          echo "Scoop repo access: $(echo "$SCOOP_ACCESS" | grep -q "permissions" && echo "Has access" || echo "No access")"
          echo "Write permission: $(echo "$SCOOP_ACCESS" | grep -q '"push": *true' && echo "Yes" || echo "No")"
          
          # Print environment for debugging
          echo "Environment variables:"
          env | grep -i git | sort || echo "No Git-related env vars found"
          
          # Verify secret is available
          if [ -z "$GITHUB_TOKEN" ]; then
            echo "⚠️ GITHUB_TOKEN is empty or not set"
            exit 1
          else
            echo "✅ GITHUB_TOKEN is set (length: ${#GITHUB_TOKEN})"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_GITHUB_PAT }}

      - name: Verify Secret Before GoReleaser
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "Checking if DEPLOY_GITHUB_PAT secret exists..."
          if [[ "${{ secrets.DEPLOY_GITHUB_PAT }}" != "" ]]; then
            echo "✅ DEPLOY_GITHUB_PAT secret is configured"
          else
            echo "⚠️ DEPLOY_GITHUB_PAT secret is not configured"
            exit 1
          fi

      - name: Run GoReleaser
        if: startsWith(github.ref, 'refs/tags/v')
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          # Use personal access token with cross-repo access
          GITHUB_TOKEN: ${{ secrets.DEPLOY_GITHUB_PAT }}
          # This adds additional debug output from goreleaser
          GORELEASER_DEBUG: 1
          # This adds debug output from GitHub CLI
          GH_DEBUG: api 